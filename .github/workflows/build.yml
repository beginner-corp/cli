name: Node CI

# Push tests pushes; PR tests merges
on: [ push, pull_request ]

defaults:
  run:
    shell: bash

jobs:

  # Test the build
  test:
    # Setup
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [ 14.x ]
        os: [ windows-latest, ubuntu-latest, macOS-latest ]

    # Go
    steps:
    - name: Check out repo
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Env
      run: |
        echo "Event name: ${{ github.event_name }}"
        echo "Git ref:    ${{ github.ref }}"
        echo "GH actor:   ${{ github.actor }}"
        echo "SHA:        ${{ github.sha }}"
        VER=`node --version`; echo "Node ver:   $VER"
        VER=`npm --version`; echo "npm ver:    $VER"

    - name: Install
      run: npm install

    - name: Test
      run: npm test
      env:
        CI: true

    - name: Notify
      uses: homoluctus/slatify@master
      # Only fire alert once; may need `&& matrix.node-version == '10.x' && matrix.os == 'ubuntu-latest'` later
      if: github.ref == 'refs/heads/main' && failure()
      with:
        type: ${{ job.status }}
        job_name: '*Build*'
        url: ${{ secrets.SLACK_WEBHOOK }}
        commit: true
        token: ${{ secrets.GITHUB_TOKEN }}

  # ----- Only git tag testing + release deployment beyond this point ----- #

  # Deploy the build
  deploy:
    # Setup
    needs: test
    if: startsWith(github.ref, 'refs/tags/v') ||
        github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    # Go
    steps:
      - name: Check out repo
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install
        run: npm i

      - name: Deploy 'prod' build
        if: startsWith(github.ref, 'refs/tags/v')
        run: npm run deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DEPLOY: prod
          S3_BUCKET: ${{ secrets.S3_BUCKET }}

      - name: Deploy 'main' build
        if: github.ref == 'refs/heads/main'
        run: npm run deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          DEPLOY: main
          S3_BUCKET: ${{ secrets.S3_BUCKET }}

      - name: Notify
        uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          title: "*Deploy*"
          color: 0x222222
          username: GitHub Actions
